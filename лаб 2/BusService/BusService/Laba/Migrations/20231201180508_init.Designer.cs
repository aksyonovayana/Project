// <auto-generated />
using System;
using Laba.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Laba.Migrations
{
    [DbContext(typeof(BusContext))]
    [Migration("20231201180508_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BusStopRoute", b =>
                {
                    b.Property<int>("RoutesId")
                        .HasColumnType("int");

                    b.Property<int>("StopsId")
                        .HasColumnType("int");

                    b.HasKey("RoutesId", "StopsId");

                    b.HasIndex("StopsId");

                    b.ToTable("RouteStops", (string)null);
                });

            modelBuilder.Entity("Buses.Classes.BusStop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BusStops");
                });

            modelBuilder.Entity("Buses.Classes.Journey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Departure")
                        .HasColumnType("datetime2");

                    b.Property<int>("RouteId")
                        .HasColumnType("int");

                    b.Property<int>("TransportId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RouteId")
                        .IsUnique();

                    b.HasIndex("TransportId")
                        .IsUnique();

                    b.ToTable("Journeys");
                });

            modelBuilder.Entity("Buses.Classes.Passenger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Passengers");
                });

            modelBuilder.Entity("Buses.Classes.Route", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("Buses.Classes.Ticket", b =>
                {
                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Number"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JourneyId")
                        .HasColumnType("int");

                    b.Property<int>("PassengerId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.HasKey("Number");

                    b.HasIndex("JourneyId");

                    b.HasIndex("PassengerId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Buses.Classes.Transport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Transports");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Transport");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Buses.Classes.Bus", b =>
                {
                    b.HasBaseType("Buses.Classes.Transport");

                    b.Property<float>("LuggageCompart")
                        .HasColumnType("real");

                    b.HasDiscriminator().HasValue("Bus");
                });

            modelBuilder.Entity("Buses.Classes.MiniBus", b =>
                {
                    b.HasBaseType("Buses.Classes.Transport");

                    b.HasDiscriminator().HasValue("MiniBus");
                });

            modelBuilder.Entity("BusStopRoute", b =>
                {
                    b.HasOne("Buses.Classes.Route", null)
                        .WithMany()
                        .HasForeignKey("RoutesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Buses.Classes.BusStop", null)
                        .WithMany()
                        .HasForeignKey("StopsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Buses.Classes.Journey", b =>
                {
                    b.HasOne("Buses.Classes.Route", "Route")
                        .WithOne("Journey")
                        .HasForeignKey("Buses.Classes.Journey", "RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Buses.Classes.Transport", "Transport")
                        .WithOne("Journey")
                        .HasForeignKey("Buses.Classes.Journey", "TransportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Route");

                    b.Navigation("Transport");
                });

            modelBuilder.Entity("Buses.Classes.Ticket", b =>
                {
                    b.HasOne("Buses.Classes.Journey", "Journey")
                        .WithMany("Tickets")
                        .HasForeignKey("JourneyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Buses.Classes.Passenger", "Passenger")
                        .WithMany("Tickets")
                        .HasForeignKey("PassengerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Journey");

                    b.Navigation("Passenger");
                });

            modelBuilder.Entity("Buses.Classes.Journey", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Buses.Classes.Passenger", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Buses.Classes.Route", b =>
                {
                    b.Navigation("Journey");
                });

            modelBuilder.Entity("Buses.Classes.Transport", b =>
                {
                    b.Navigation("Journey");
                });
#pragma warning restore 612, 618
        }
    }
}
